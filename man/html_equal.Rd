% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/equal.R
\name{html_equal}
\alias{html_equal}
\alias{==.selenider_element}
\title{Are two elements equivalent?}
\usage{
html_equal(x, y, timeout = NULL)

\method{==}{selenider_element}(e1, e2)
}
\arguments{
\item{x, y, e1, e2}{\code{selenider_element} objects to compare.}

\item{timeout}{How long to wait for the elements to be present.}
}
\value{
\code{TRUE} or \code{FALSE}.
}
\description{
Checks if two \code{selenider_element} objects point to the
same element on the page. \code{html_equal()} is equivalent to
using \code{==}, but allows you to specify a timeout value if
needed.
}
\examples{
\dontshow{if (selenider_available(online = FALSE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
html <- "
<div></div>
<div class='second'>
  <p></p>
</div>
"

session <- minimal_selenider_session(html)

s("div") == ss("div")[[1]]

has_p_child <- function(x) {
  x |>
    html_children() |> # Direct children
    html_filter(has_name("p")) |>
    has_at_least(1)
}

ss("div") |>
  html_find(has_p_child) |>
  html_equal(s(".second")) # TRUE

\dontshow{
# Clean up all connections and invalidate default chromote object
selenider_cleanup()
}
\dontshow{\}) # examplesIf}
}
\seealso{
\itemize{
\item \code{\link[=html_filter]{html_filter()}} and \code{\link[=html_find]{html_find()}} for filtering collection of elements.
}
}
