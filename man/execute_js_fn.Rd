% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/js.R
\name{execute_js_fn}
\alias{execute_js_fn}
\title{Execute a JavaScript function}
\usage{
execute_js_fn(fn, ..., timeout = NULL, session = NULL)
}
\arguments{
\item{fn}{A string defining the function.}

\item{...}{Arguments to the function.}

\item{The}{session to use, if \code{...} does not contain any
selenider elements.}
}
\value{
The return value of the JavaScript function, turned back into an R object.
}
\description{
Execute a JavaScript function on zero or more arguments.
}
\details{
\code{...} can contain \code{selenider_element}/\code{selenider_elements} objects,
which will be collected and then passed into the function. However,
more complex objects (e.g. lists of selenider elements) will not be
moved into the JavaScript world correctly.

Additionally, if the JavaScript function returns a node or array of
nodes, they will be turned back into \code{selenider_element}/\code{selenider_elements}
objects.
}
