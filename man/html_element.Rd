% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/html_element.R
\name{html_element}
\alias{html_element}
\alias{html_element.selenider_session}
\alias{html_element.selenider_element}
\title{Get a single HTML element}
\usage{
html_element(x, ...)

\method{html_element}{selenider_session}(
  x,
  css = NULL,
  xpath = NULL,
  id = NULL,
  class_name = NULL,
  name = NULL,
  link_text = NULL,
  ...
)

\method{html_element}{selenider_element}(
  x,
  css = NULL,
  xpath = NULL,
  id = NULL,
  class_name = NULL,
  name = NULL,
  link_text = NULL,
  ...
)
}
\arguments{
\item{x}{A selenider session or element.}

\item{...}{Arguments passed to methods.}

\item{css}{A css selector.}

\item{xpath}{An XPath.}

\item{id}{The id of the element you want to select.}

\item{class_name}{The class name of the element you want to select.}

\item{name}{The name attribute of the element you want to select.}

\item{link_text}{The link text of the link element that you would like to
select.}
}
\value{
A \code{selenider_element} object.
}
\description{
Find the first HTML element using a CSS selector, an XPath, or a variety
of other methods.
}
\details{
If more than one method is used to select an element (e.g. \code{css} and
\code{xpath}), the first element which satisfies all conditions will be found.
}
\examples{
session <- mock_selenider_session()

session |>
  html_element(".class1")

session |>
  html_element(".class1") |>
  html_element(".class2")

# The above can be shortened to:
s(".class1") |>
  html_element(".class2")

}
\seealso{
\itemize{
\item \code{\link[=s]{s()}} to quickly select an element without specifying the session.
\item \code{\link[=html_elements]{html_elements()}} to select multiple elements.
\item \code{\link[=selenider_session]{selenider_session()}} to begin a session.
}
}
